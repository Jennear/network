version: '3.3'

networks:
  default:
    external:
      name: network_default

volumes:
  pgsql_db_data:
  pgsql_data:

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    ports:
    - 5432:5432
    # https://github.com/docker-library/docs/tree/master/postgres#environment-variables
    environment:
    - POSTGRES_USER=${USER_NAME}
    - POSTGRES_PASSWORD=${USER_PASSWORD}
    - POSTGRES_DB=${NAME}
    - VIRTUAL_PORT=5432
    volumes:
    - pgsql_db_data:/var/lib/postgresql/data
    labels:
    - com.centurylinklabs.watchtower.enable='false'

  # https://hub.docker.com/r/dpage/pgadmin4/
  postgres_admin:
    container_name: postgres.admin
    restart: always    
    image: dpage/pgadmin4
    expose:
    - 80
    environment:
    - PGADMIN_DEFAULT_EMAIL=${USER_EMAIL}
    - PGADMIN_DEFAULT_PASSWORD=${USER_PASSWORD}
    - VIRTUAL_HOST=pgsql.${DOMAIN}
    - LETSENCRYPT_HOST=pgsql.${DOMAIN}
    - LETSENCRYPT_EMAIL=${USER_EMAIL}
    links:
    - postgres
    volumes:
    - pgsql_data:/var/lib/pgadmin
    labels:
    - com.centurylinklabs.watchtower.enable='true'

  hasura:
    container_name: hasura
    image: hasura/graphql-engine:latest
    ports:
    - "8080:8080"
    depends_on:
    - postgres
    restart: always
    environment:
      VIRTUAL_HOST: hasura.${DOMAIN}
      LETSENCRYPT_HOST: hasura.${DOMAIN}
      LETSENCRYPT_EMAIL: ${USER_EMAIL}
      HASURA_GRAPHQL_DATABASE_URL: postgres://${USER_NAME}:${USER_PASSWORD}@postgres:5432/${NAME}
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ${USER_PASSWORD}
    labels:
    - com.centurylinklabs.watchtower.enable='true'
